{"retrieval_idx": 55, "function_tokens": ["def", "Func", "(", "arg0", ")", ":", "\n", "    ", "st", ".", "session_state", "[", "'assistant'", "]", "=", "[", "]", "\n", "st", ".", "session_state", "[", "'user'", "]", "=", "[", "]", "\n", "st", ".", "session_state", "[", "'selected_page_common'", "]", "=", "False", "\n", "st", ".", "session_state", "[", "'selected_create_assistant'", "]", "=", "False", "\n", "st", ".", "session_state", "[", "'selected_history'", "]", "=", "None", "\n", "st", ".", "session_state", "[", "'thread_obj'", "]", "=", "None"], "docstring_tokens": ["Initialize", "session", "state", "variables", "."]}
{"retrieval_idx": 27, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "list", "[", "Plan", "]", ")", ":", "\n", "    ", "self", ".", "plans", "=", "plans"], "docstring_tokens": ["Set", "feature", "implementation", "plan", "."]}
{"retrieval_idx": 38, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "ChatWithPromptTemplateInput", ")", ":", "\n", "    ", "return", "self", ".", "_make_completion", "(", "[", "Message", "(", "role", "=", "'user'", ",", "content", "=", "input", ".", "prompt_template", ".", "format", "(", "**", "input", ".", "params", ")", ")", "]", ",", "input", ")"], "docstring_tokens": ["Chat", "with", "OpenAI", "'", "s", "model", "with", "a", "specific", "prompt", "template", "."]}
{"retrieval_idx": 51, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "UserProperties", ",", "arg2", ":", "RedisKeyType", ")", ":", "\n", "    ", "return", "self", ".", "redis", ".", "exists", "(", "user_properties", ".", "generate_redis_key_with_type", "(", "type", ")", ")"], "docstring_tokens": ["Check", "if", "a", "key", "exists", "in", "Redis", "with", "a", "specific", "key", "type", ".", "\n", "\n", "Args", ":", "\n", "    ", "user_properties", "(", "UserProperties", ")", ":", "The", "user", "properties", ".", "\n", "type", "(", "RedisKeyType", ")", ":", "The", "Redis", "key", "type", ".", "\n", "\n", "Returns", ":", "\n", "    ", "bool", ":", "True", "if", "the", "key", "exists", ",", "False", "otherwise", "."]}
{"retrieval_idx": 49, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "str", ",", "arg2", ",", "arg3", ":", "bool", "=", "True", ")", ":", "\n", "    ", "self", ".", "redis", ".", "set", "(", "key", ",", "json", ".", "dumps", "(", "value", ")", ")", "\n", "if", "save", ":", "\n", "        ", "return", "self", ".", "redis", ".", "save", "(", ")"], "docstring_tokens": ["Set", "the", "value", "of", "a", "key", "in", "Redis", "and", "dumps", "into", "json", "before", "setting", ".", "\n", "\n", "Args", ":", "\n", "    ", "key", "(", "str", ")", ":", "The", "key", "to", "set", "the", "value", "for", ".", "\n", "value", "(", "str", ")", ":", "The", "value", "to", "set", "for", "the", "key", ".", "\n", "save", "(", "bool", ",", "optional", ")", ":", "Whether", "to", "save", "the", "changes", "to", "disk", ",", "by", "default", "True", ".", "\n", "\n", "Returns", ":", "\n", "    ", "Optional", "[", "str", "]", ":", "If", " ", "`", "save", "`", "is", "True", ",", "returns", "the", "Redis", "response", "to", "the", "SAVE", "command", "."]}
{"retrieval_idx": 14, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "str", ")", ":", "\n", "    ", "repo_path", "=", "REPO_PATH", "/", "repo_name", "\n", "self", ".", "repo_manager", "=", "RepoManager", "(", "repo_path", ")", "\n", "self", ".", "openai_node", ".", "add_single_message", "(", "Message", "(", "role", "=", "'system'", ",", "content", "=", "REPO_STRUCTURE_PROMPT", ".", "format", "(", "file_tree", "=", "self", ".", "repo_manager", ".", "file_tree_str", ")", ")", ")"], "docstring_tokens": ["Set", "local", "repo", "path", "."]}
{"retrieval_idx": 20, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ")", ":", "\n", "    ", "self", ".", "repo_manager", ".", "add_focus_file", "(", "file_path", ")"], "docstring_tokens": ["Add", "file", "to", "repo", "."]}
{"retrieval_idx": 19, "function_tokens": ["def", "Func", "(", "arg0", ")", ":", "\n", "    ", "self", ".", "openai_node", "=", "OpenAINode", "(", ")", "\n", "self", ".", "openai_node", ".", "add_single_message", "(", "Message", "(", "role", "=", "'system'", ",", "content", "=", "SDE_PROMPT", ")", ")"], "docstring_tokens": ["Initialize", "OpenAI", "node", ".", "\n", "Add", "global", "system", "messages", "."]}
{"retrieval_idx": 22, "function_tokens": ["def", "Func", "(", "arg0", ")", ":", "\n", "    ", "return", "self", ".", "repo_manager", ".", "focus_files"], "docstring_tokens": ["Get", "focus", "files", "."]}
{"retrieval_idx": 6, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "int", "=", "5", ")", ":", "\n", "    ", "return", "{", "file_path", ":", "file_content", "for", "file_path", ",", "file_content", "in", "islice", "(", "zip", "(", "self", ".", "focus_files", ",", "map", "(", "self", ".", "get_file_content", ",", "self", ".", "focus_files", ")", ")", ",", "limit_files", ")", "}"], "docstring_tokens": ["Get", "the", "content", "of", "the", "focus", "files", "(", "only", "output", "first", "5", "files", ")", "."]}
{"retrieval_idx": 43, "function_tokens": ["def", "Func", "(", "arg0", ")", ":", "\n", "    ", "self", ".", "redis", "=", "redis", ".", "Redis", "(", "host", "=", "'redis'", ",", "port", "=", "6379", ",", "decode_responses", "=", "True", ")"], "docstring_tokens": ["Initialize", "a", "Redis", "client", "instance", "."]}
{"retrieval_idx": 9, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "str", ",", "arg2", ":", "str", ")", ":", "\n", "    ", "full_path", "=", "self", ".", "root_path", "/", "file_path", "\n", "if", "os", ".", "path", ".", "exists", "(", "full_path", ")", ":", "\n", "        ", "raise", "FileExistsError", "(", "f'File {full_path} already exists.'", ")", "\n", "else", ":", "\n", "        ", "with", "open", "(", "full_path", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "content", ")"], "docstring_tokens": ["Add", "a", "file", "to", "the", "repo", "."]}
{"retrieval_idx": 28, "function_tokens": ["def", "Func", "(", "arg0", ")", ":", "\n", "    ", "return", "self", ".", "file_actions"], "docstring_tokens": ["Get", "file", "actions", "."]}
{"retrieval_idx": 50, "function_tokens": ["def", "Func", "(", "arg0", ")", ":", "\n", "    ", "for", "key", "in", "self", ".", "redis", ".", "keys", "(", ")", ":", "\n", "        ", "print", "(", "f'{key}: {self.redis.get(key)}'", ")"], "docstring_tokens": ["Print", "all", "keys", "and", "their", "corresponding", "values", "in", "Redis", "."]}
{"retrieval_idx": 33, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "Document", ",", "arg2", ":", "Optional", "[", "int", "]", "=", "500", ",", "arg3", ":", "Optional", "[", "int", "]", "=", "0", ")", ":", "\n", "    ", "logger", ".", "debug", "(", "f'Spliting documents from file {input.file_name}'", ")", "\n", "text_splitter", "=", "RecursiveCharacterTextSplitter", ".", "from_tiktoken_encoder", "(", "chunk_size", "=", "chunk_size", ",", "chunk_overlap", "=", "chunk_overlap", ")", "\n", "documents", "=", "text_splitter", ".", "split_documents", "(", "input", ".", "documents", ")", "\n", "return", "documents"], "docstring_tokens": ["Split", "the", "documents", "from", "the", "file"]}
{"retrieval_idx": 18, "function_tokens": ["def", "Func", "(", "arg0", ")", ":", "\n", "    ", "for", "plan", "in", "self", ".", "plans", ":", "\n", "        ", "match", "plan", ".", "action", ":", "\n", "            ", "case", "'add'", ":", "\n", "                ", "file_action", "=", "self", ".", "_add_file", "(", "plan", ")", "\n", "case", "'remove'", ":", "\n", "                ", "file_action", "=", "self", ".", "_remove_file", "(", "plan", ")", "\n", "case", "'modify'", ":", "\n", "                ", "file_action", "=", "self", ".", "_modify_file", "(", "plan", ")", "\n", "case", "_", ":", "\n", "                ", "raise", "ValueError", "(", "f'Unknown action {plan.action}.'", ")", "\n", "self", ".", "file_actions", ".", "append", "(", "file_action", ")", "\n", "yield", "file_action"], "docstring_tokens": ["Implement", "plan", ",", "generate", "a", "list", "of", "file", "actions", "."]}
{"retrieval_idx": 4, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ")", ":", "\n", "    ", "if", "file_path", "in", "self", ".", "focus_files", ":", "\n", "        ", "self", ".", "focus_files", ".", "remove", "(", "file_path", ")", "\n", "else", ":", "\n", "        ", "logging", ".", "warning", "(", "f'Try to remove unexisting file {file_path}.'", ")"], "docstring_tokens": ["Remove", "a", "file", "from", "the", "interest", "file", "set", "."]}
{"retrieval_idx": 8, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "list", "[", "FileAction", "]", ")", ":", "\n", "    ", "for", "file_action", "in", "file_actions", ":", "\n", "        ", "match", "file_action", ".", "action", ":", "\n", "            ", "case", "'add'", ":", "\n", "                ", "self", ".", "_add_file", "(", "file_action", ".", "file_path", ",", "file_action", ".", "content", ")", "\n", "case", "'remove'", ":", "\n", "                ", "self", ".", "_remove_file", "(", "file_action", ".", "file_path", ")", "\n", "case", "'modify'", ":", "\n", "                ", "self", ".", "_modify_file", "(", "file_action", ".", "file_path", ",", "file_action", ".", "content", ")", "\n", "case", "_", ":", "\n", "                ", "raise", "ValueError", "(", "f'Unknown action {file_action.action}.'", ")", "\n", "self", ".", "file_tree_str", "=", "self", ".", "_generate_file_tree_str", "(", ")"], "docstring_tokens": ["Apply", "the", "file", "actions", "to", "the", "files", "."]}
{"retrieval_idx": 13, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "str", ")", ":", "\n", "    ", "self", ".", "repo_url", "=", "repo_url", "\n", "repo_path", "=", "REPO_PATH", "/", "Path", "(", "repo_url", ")", ".", "name", "\n", "self", ".", "git_node", ".", "git_clone", "(", "input", "=", "GitRemoteRepositoryInput", "(", "url", "=", "repo_url", ",", "path", "=", "repo_path", ")", ")", "\n", "self", ".", "repo_manager", "=", "RepoManager", "(", "repo_path", ")", "\n", "self", ".", "openai_node", ".", "add_single_message", "(", "Message", "(", "role", "=", "'system'", ",", "content", "=", "REPO_STRUCTURE_PROMPT", ".", "format", "(", "file_tree", "=", "self", ".", "repo_manager", ".", "file_tree_str", ")", ")", ")"], "docstring_tokens": ["Set", "repo", "url", "."]}
{"retrieval_idx": 47, "function_tokens": ["def", "Func", "(", "arg0", ")", "->", "str", ":", "\n", "    ", "return", "self", ".", "redis", ".", "save", "(", ")"], "docstring_tokens": ["Export", "all", "key", "-", "value", "pairs", "to", "an", "RDB", "file", ".", "\n", "\n", "Returns", ":", "\n", "    ", "Optional", "[", "str", "]", ":", "The", "Redis", "response", "to", "the", "SAVE", "command", "."]}
{"retrieval_idx": 10, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "str", ")", ":", "\n", "    ", "full_path", "=", "self", ".", "root_path", "/", "file_path", "\n", "if", "os", ".", "path", ".", "exists", "(", "full_path", ")", ":", "\n", "        ", "os", ".", "remove", "(", "full_path", ")", "\n", "else", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "f'File {full_path} does not exist.'", ")"], "docstring_tokens": ["Remove", "a", "file", "from", "the", "repo", "."]}
{"retrieval_idx": 54, "function_tokens": ["def", "Func", "(", "arg0", ":", "str", ",", "arg1", ":", "list", "[", "tuple", "[", "str", ",", "IO", "[", "Any", "]", "]", "]", ",", "arg2", ":", "Path", "|", "str", "=", "FILE_CONNECTOR_TMP_STORAGE_PATH", ")", "->", "list", "[", "str", "]", ":", "\n", "    ", "file_location", "=", "Path", "(", "base_path", ")", "/", "user_id", "/", "str", "(", "uuid", ".", "uuid4", "(", ")", ")", "\n", "os", ".", "makedirs", "(", "file_location", ",", "exist_ok", "=", "True", ")", "\n", "file_paths", ":", "list", "[", "str", "]", "=", "[", "]", "\n", "for", "file_name", ",", "file", "in", "files", ":", "\n", "        ", "extension", "=", "get_file_ext", "(", "file_name", ")", "\n", "if", "not", "check_file_ext_is_valid", "(", "extension", ")", ":", "\n", "            ", "raise", "ValueError", "(", "f\"Invalid file extension for file: '{file_name}'. Must be one of {_VALID_FILE_EXTENSIONS}\"", ")", "\n", "file_path", "=", "file_location", "/", "file_name", "\n", "with", "open", "(", "file_path", ",", "'wb'", ")", "as", "buffer", ":", "\n", "            ", "shutil", ".", "copyfileobj", "(", "file", ",", "buffer", ")", "\n", "file_paths", ".", "append", "(", "str", "(", "file_path", ".", "absolute", "(", ")", ")", ")", "\n", "return", "file_paths"], "docstring_tokens": ["Writes", "temporary", "files", "to", "disk", "and", "returns", "their", "paths", "\n", "\n", "NOTE", ":", "need", "to", "pass", "in", "(", "file_name", ",", "File", ")", "tuples", "since", "FastAPI", "'", "s", " ", "`", "UploadFile", "`", "class", "\n", "exposed", "SpooledTemporaryFile", "does", "not", "include", "a", "name", "."]}
{"retrieval_idx": 12, "function_tokens": ["def", "Func", "(", "arg0", ":", "Path", ",", "arg1", ":", "str", "=", "''", ")", ":", "\n", "    ", "contents", "=", "list", "(", "dir_path", ".", "iterdir", "(", ")", ")", "\n", "pointers", "=", "[", "tee", "]", "*", "(", "len", "(", "contents", ")", "-", "1", ")", "+", "[", "last", "]", "\n", "for", "pointer", ",", "path", "in", "zip", "(", "pointers", ",", "contents", ")", ":", "\n", "        ", "yield", "(", "prefix", "+", "pointer", "+", "path", ".", "name", ")", "\n", "if", "path", ".", "is_dir", "(", ")", ":", "\n", "            ", "extension", "=", "branch", "if", "pointer", "==", "tee", "else", "space", "\n", "yield", "from", "_tree_iter", "(", "path", ",", "prefix", "=", "prefix", "+", "extension", ")"], "docstring_tokens": ["A", "recursive", "generator", ",", "given", "a", "directory", "Path", "object", "\n", "will", "yield", "a", "visual", "tree", "structure", "line", "by", "line", "\n", "with", "each", "line", "prefixed", "by", "the", "same", "characters"]}
{"retrieval_idx": 52, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "UserProperties", ",", "arg2", ":", "RedisKeyType", ")", ":", "\n", "    ", "return", "json", ".", "loads", "(", "self", ".", "redis", ".", "get", "(", "user_properties", ".", "generate_redis_key_with_type", "(", "type", ")", ")", ")"], "docstring_tokens": ["Get", "the", "value", "of", "a", "key", "from", "Redis", "with", "a", "specific", "key", "type", "and", "json", "loads", "the", "value", ".", "\n", "\n", "Args", ":", "\n", "    ", "user_properties", "(", "UserProperties", ")", ":", "The", "user", "properties", ".", "\n", "type", "(", "RedisKeyType", ")", ":", "The", "Redis", "key", "type", ".", "\n", "\n", "Returns", ":", "\n", "    ", "str", ":", "The", "value", "of", "the", "key", "."]}
{"retrieval_idx": 25, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "Plan", ")", ":", "\n", "    ", "self", ".", "plans", ".", "remove", "(", "plan", ")"], "docstring_tokens": ["Remove", "plan", "from", "implement", "plan", "."]}
{"retrieval_idx": 35, "function_tokens": ["@", "classmethod", "\n", "def", "Func", "(", "arg0", ",", "arg1", ":", "UploadFile", ",", "arg2", ":", "UserProperties", ")", ":", "\n", "    ", "current_time", "=", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "TIME_STRING_FORMAT", ")", "\n", "file_name", "=", "f'{current_time}-{input.filename}'", "\n", "file_path", "=", "DEFAULT_DOCUMENTS_FOLDER", "/", "properties", ".", "user_id", "/", "properties", ".", "session_id", "/", "file_name", "\n", "file_path", ".", "parent", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "with", "open", "(", "file_path", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "input", ".", "file", ".", "read", "(", ")", ")", "\n", "file_id", "=", "hashlib", ".", "sha256", "(", "f'{properties.user_id}-{properties.session_id}-{file_name}'", ".", "encode", "(", ")", ")", ".", "hexdigest", "(", ")", "\n", "file_extension", "=", "file_name", ".", "split", "(", "'.'", ")", "[", "-", "1", "]", ".", "lower", "(", ")", "\n", "file_size", "=", "input", ".", "file", ".", "_file", ".", "tell", "(", ")", "\n", "creation_time", "=", "current_time", "\n", "return", "cls", "(", "user_properties", "=", "UserProperties", "(", "**", "properties", ".", "dict", "(", ")", ")", ",", "file_id", "=", "file_id", ",", "file_path", "=", "file_path", ",", "file_name", "=", "file_name", ",", "file_extension", "=", "file_extension", ",", "file_size", "=", "file_size", ",", "creation_time", "=", "creation_time", ")"], "docstring_tokens": ["Creates", "a", "new", "Document", "object", "from", "an", "UploadFile", "input", ".", "\n", "\n", "Args", ":", "\n", "    ", "input", "(", "UploadFile", ")", ":", "The", "uploaded", "file", ".", "\n", "\n", "Returns", ":", "\n", "    ", "Document", ":", "A", "new", "Document", "object", "."]}
{"retrieval_idx": 2, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ")", ":", "\n", "    ", "self", ".", "repo_manager", ".", "add_focus_file", "(", "file_path", ")"], "docstring_tokens": ["Add", "file", "to", "repo", "."]}
{"retrieval_idx": 42, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "list", "[", "Message", "]", ",", "arg2", ":", "ChatConfig", ")", "->", "OpenAIResp", "|", "OpenAIStreamingResp", ":", "\n", "    ", "kwargs", "=", "{", "'model'", ":", "input", ".", "model", "}", "\n", "cur_messages", "=", "[", "]", "\n", "if", "len", "(", "self", ".", "history", ")", "==", "0", ":", "\n", "        ", "cur_messages", ".", "append", "(", "Message", "(", "role", "=", "'system'", ",", "content", "=", "\"You are a helpful AI assistant. You should answer the user's questions and help them with their tasks.\"", ")", ".", "dict", "(", "exclude_none", "=", "True", ")", ")", "\n", "else", ":", "\n", "        ", "cur_messages", "+=", "self", ".", "history", "\n", "if", "input", ".", "append_history", ":", "\n", "        ", "for", "message", "in", "messages", ":", "\n", "            ", "self", ".", "add_single_message", "(", "message", ")", "\n", "for", "message", "in", "messages", ":", "\n", "        ", "cur_messages", ".", "append", "(", "message", ".", "dict", "(", "exclude_none", "=", "True", ")", ")", "\n", "kwargs", "[", "'messages'", "]", "=", "tt", ".", "trim", "(", "cur_messages", ",", "input", ".", "model", ",", "max_tokens", "=", "9999", ")", "\n", "if", "len", "(", "self", ".", "functions", ")", ">", "0", ":", "\n", "        ", "kwargs", "[", "'functions'", "]", "=", "self", ".", "functions", "\n", "kwargs", "[", "'function_call'", "]", "=", "'auto'", "\n", "if", "input", ".", "use_streaming", ":", "\n", "        ", "kwargs", "[", "'stream'", "]", "=", "True", "\n", "try", ":", "\n", "        ", "client", "=", "OpenAI", "(", "api_key", "=", "os", ".", "getenv", "(", "'OPENAI_CHAT_API_KEY'", ")", ")", "\n", "response", "=", "client", ".", "chat", ".", "completions", ".", "create", "(", "**", "kwargs", ")", "\n", "except", "Exception", "as", "e", ":", "\n", "        ", "logging", ".", "warn", "(", "f'openai_node._make_completion: error occurred: {e}'", ")", "\n", "return", "OpenAIResp", "(", "message", "=", "Message", "(", "role", "=", "'system'", ",", "content", "=", "f'Error occurred: {e}'", ")", ",", "finish_reason", "=", "'error'", ")", "\n", "if", "input", ".", "use_streaming", ":", "\n", "        ", "resp", "=", "OpenAIStreamingResp", "(", "**", "response", ".", "choices", "[", "0", "]", ".", "dict", "(", ")", ")", "\n", "if", "input", ".", "append_history", ":", "\n", "            ", "self", ".", "history", ".", "append", "(", "resp", ".", "delta", ".", "dict", "(", "exclude_none", "=", "True", ")", ")", "\n", "return", "resp", "\n", "resp", "=", "OpenAIResp", "(", "**", "response", ".", "choices", "[", "0", "]", ".", "dict", "(", ")", ")", "\n", "if", "input", ".", "append_history", ":", "\n", "        ", "self", ".", "history", ".", "append", "(", "resp", ".", "message", ".", "dict", "(", "exclude_none", "=", "True", ")", ")", "\n", "return", "resp"], "docstring_tokens": ["Make", "a", "completion", "with", "the", "given", "messages", "."]}
{"retrieval_idx": 17, "function_tokens": ["def", "Func", "(", "arg0", ")", ":", "\n", "    ", "if", "len", "(", "self", ".", "repo_manager", ".", "focus_files", ")", "==", "0", ":", "\n", "        ", "logging", ".", "warning", "(", "'No focus files are set. Please set focus files first.'", ")", "\n", "focus_files_dict", "=", "self", ".", "repo_manager", ".", "get_focus_files_content", "(", ")", "\n", "focus_files_str", "=", "'\\n'", ".", "join", "(", "[", "f'{file_path}:\\n{file_content}'", "for", "file_path", ",", "file_content", "in", "focus_files_dict", ".", "items", "(", ")", "]", ")", "\n", "self", ".", "openai_node", ".", "add_single_message", "(", "Message", "(", "role", "=", "'system'", ",", "content", "=", "FOCUS_FILE_PROMPT", ".", "format", "(", "focus_files", "=", "focus_files_str", ")", ")", ")", "\n", "resp", "=", "self", ".", "openai_node", ".", "chat", "(", "input", "=", "ChatInput", "(", "model", "=", "self", ".", "model_name", ",", "message_text", "=", "PLAN_PROMPT", ".", "format", "(", "format_example", "=", "PLAN_FORMAT_EXAMPLE", ")", ")", ")", "\n", "plan", "=", "LLMOutputParser", ".", "parse_output", "(", "resp", ".", "message", ".", "content", ")", "[", "'plan'", "]", "\n", "for", "action", ",", "file_path", ",", "description", "in", "plan", ":", "\n", "        ", "self", ".", "plans", ".", "append", "(", "Plan", "(", "action", "=", "action", ".", "lower", "(", ")", ",", "file_path", "=", "file_path", ",", "description", "=", "description", ")", ")"], "docstring_tokens": ["Design", "high", "level", "plan", "for", "feature", "development", "."]}
{"retrieval_idx": 0, "function_tokens": ["@", "staticmethod", "\n", "def", "Func", "(", "arg0", ")", ":", "\n", "    ", "print", "(", "'\\x1b[1m{0}\\x1b[0m'", ".", "format", "(", "s", ")", ")"], "docstring_tokens": ["Prints", "things", "in", "bold", "."]}
{"retrieval_idx": 45, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "str", ",", "arg2", ":", "str", ",", "arg3", ":", "bool", "=", "True", ")", "->", "str", ":", "\n", "    ", "self", ".", "redis", ".", "set", "(", "key", ",", "value", ")", "\n", "if", "save", ":", "\n", "        ", "return", "self", ".", "redis", ".", "save", "(", ")"], "docstring_tokens": ["Set", "the", "value", "of", "a", "key", "in", "Redis", ".", "\n", "\n", "Args", ":", "\n", "    ", "key", "(", "str", ")", ":", "The", "key", "to", "set", "the", "value", "for", ".", "\n", "value", "(", "str", ")", ":", "The", "value", "to", "set", "for", "the", "key", ".", "\n", "save", "(", "bool", ",", "optional", ")", ":", "Whether", "to", "save", "the", "changes", "to", "disk", ",", "by", "default", "True", ".", "\n", "\n", "Returns", ":", "\n", "    ", "Optional", "[", "str", "]", ":", "If", " ", "`", "save", "`", "is", "True", ",", "returns", "the", "Redis", "response", "to", "the", "SAVE", "command", "."]}
{"retrieval_idx": 44, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "str", ")", "->", "str", ":", "\n", "    ", "return", "self", ".", "redis", ".", "get", "(", "key", ")"], "docstring_tokens": ["Get", "the", "value", "of", "a", "key", "from", "Redis", ".", "\n", "\n", "Args", ":", "\n", "    ", "key", "(", "str", ")", ":", "The", "key", "to", "retrieve", "the", "value", "for", ".", "\n", "\n", "Returns", ":", "\n", "    ", "str", ":", "The", "value", "of", "the", "key", "."]}
{"retrieval_idx": 3, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ")", ":", "\n", "    ", "full_path", "=", "self", ".", "root_path", "/", "file_path", "\n", "if", "os", ".", "path", ".", "exists", "(", "full_path", ")", ":", "\n", "        ", "if", "file_path", "in", "self", ".", "focus_files", ":", "\n", "            ", "logging", ".", "warning", "(", "f'Try to add existing file {file_path}.'", ")", "\n", "self", ".", "focus_files", ".", "add", "(", "file_path", ")", "\n", "else", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "f'File {full_path} does not exist.'", ")"], "docstring_tokens": ["Add", "a", "file", "to", "the", "interest", "file", "set", "."]}
{"retrieval_idx": 30, "function_tokens": ["@", "staticmethod", "\n", "def", "Func", "(", ")", "->", "List", "[", "Dict", "[", "str", ",", "Any", "]", "]", ":", "\n", "    ", "if", "YamlPathConfig", ".", "threads_yaml_path", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "isfile", "(", "YamlPathConfig", ".", "threads_yaml_path", ")", ":", "\n", "            ", "with", "open", "(", "YamlPathConfig", ".", "threads_yaml_path", ",", "'w'", ")", "as", "file", ":", "\n", "                ", "yaml", ".", "dump", "(", "[", "]", ",", "file", ")", "\n", "else", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "'The threads YAML file path is not set.'", ")", "\n", "with", "open", "(", "YamlPathConfig", ".", "threads_yaml_path", ",", "'r'", ")", "as", "file", ":", "\n", "        ", "data", "=", "yaml", ".", "safe_load", "(", "file", ")", "or", "[", "]", "\n", "threads_list", "=", "[", "]", "\n", "for", "item", "in", "data", ":", "\n", "        ", "config", "=", "ThreadsConfig", ".", "from_dict", "(", "item", ")", "\n", "threads_list", ".", "append", "(", "config", ")", "\n", "return", "threads_list"], "docstring_tokens": ["\u8bfb\u53d6", "YAML", "\u6587\u4ef6\u5e76\u8fd4\u56de\u6240\u6709", "threads", "\u7684\u4fe1\u606f\u5217\u8868", "\u3002"]}
{"retrieval_idx": 11, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "str", ",", "arg2", ":", "str", ")", ":", "\n", "    ", "full_path", "=", "self", ".", "root_path", "/", "file_path", "\n", "if", "os", ".", "path", ".", "exists", "(", "full_path", ")", ":", "\n", "        ", "with", "open", "(", "full_path", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "content", ")", "\n", "else", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "f'File {full_path} does not exist.'", ")"], "docstring_tokens": ["Modify", "a", "file", "in", "the", "repo", "."]}
{"retrieval_idx": 48, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "str", ")", "->", "str", ":", "\n", "    ", "return", "json", ".", "loads", "(", "self", ".", "redis", ".", "get", "(", "key", ")", ")"], "docstring_tokens": ["Get", "the", "value", "of", "a", "key", "from", "Redis", "and", "json", "loads", "the", "value", ".", "\n", "\n", "Args", ":", "\n", "    ", "key", "(", "str", ")", ":", "The", "key", "to", "retrieve", "the", "value", "for", ".", "\n", "\n", "Returns", ":", "\n", "    ", "str", ":", "The", "value", "of", "the", "key", "."]}
{"retrieval_idx": 31, "function_tokens": ["@", "staticmethod", "\n", "def", "Func", "(", ")", "->", "List", "[", "Dict", "[", "str", ",", "Any", "]", "]", ":", "\n", "    ", "if", "YamlPathConfig", ".", "threads_yaml_path", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "isfile", "(", "YamlPathConfig", ".", "threads_yaml_path", ")", ":", "\n", "            ", "with", "open", "(", "YamlPathConfig", ".", "threads_yaml_path", ",", "'w'", ")", "as", "file", ":", "\n", "                ", "yaml", ".", "dump", "(", "[", "]", ",", "file", ")", "\n", "else", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "'The threads YAML file path is not set.'", ")", "\n", "with", "open", "(", "YamlPathConfig", ".", "threads_yaml_path", ",", "'r'", ")", "as", "file", ":", "\n", "        ", "data", "=", "yaml", ".", "safe_load", "(", "file", ")", "or", "[", "]", "\n", "threads_list", "=", "[", "]", "\n", "for", "item", "in", "data", ":", "\n", "        ", "config", "=", "ThreadsConfig", ".", "from_dict", "(", "item", ")", "\n", "threads_list", ".", "append", "(", "config", ")", "\n", "return", "threads_list"], "docstring_tokens": ["\u8bfb\u53d6", "YAML", "\u6587\u4ef6\u5e76\u8fd4\u56de\u6240\u6709", "threads", "\u7684\u4fe1\u606f\u5217\u8868", "\u3002"]}
{"retrieval_idx": 23, "function_tokens": ["def", "Func", "(", "arg0", ")", ":", "\n", "    ", "self", ".", "repo_manager", ".", "focus_files", "=", "{", "}"], "docstring_tokens": ["Clear", "focus", "files", "."]}
{"retrieval_idx": 40, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "ChatWithMessagesInput", ")", ":", "\n", "    ", "return", "self", ".", "_make_completion", "(", "input", ".", "messages", ",", "input", ")"], "docstring_tokens": ["Chat", "with", "OpenAI", "'", "s", "model", "with", "a", "specific", "message", "dict", "."]}
{"retrieval_idx": 15, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "str", ")", ":", "\n", "    ", "self", ".", "openai_node", ".", "add_single_message", "(", "Message", "(", "role", "=", "'system'", ",", "content", "=", "FEATURE_PROMPT", ".", "format", "(", "feature_description", "=", "feature_description", ")", ")", ")", "\n", "self", ".", "feature_description", "=", "feature_description"], "docstring_tokens": ["Set", "feature", "description", "."]}
{"retrieval_idx": 32, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "Document", ")", ":", "\n", "    ", "file_path", "=", "str", "(", "input", ".", "file_path", ")", "\n", "if", "input", ".", "file_extension", "==", "'csv'", ":", "\n", "        ", "loader", "=", "CSVLoader", "(", "file_path", ")", "\n", "elif", "input", ".", "file_extension", "==", "'docx'", ":", "\n", "        ", "loader", "=", "Docx2txtLoader", "(", "file_path", ")", "\n", "elif", "input", ".", "file_extension", "==", "'pdf'", ":", "\n", "        ", "loader", "=", "PyMuPDFLoader", "(", "file_path", ")", "\n", "elif", "input", ".", "file_extension", "==", "'txt'", ":", "\n", "        ", "loader", "=", "TextLoader", "(", "file_path", ")", "\n", "elif", "input", ".", "file_extension", "==", "'web'", ":", "\n", "        ", "loader", "=", "WebBaseLoader", "(", "input", ".", "file_name", ")", "\n", "elif", "input", ".", "file_extension", "==", "'git'", ":", "\n", "        ", "repo_path", "=", "input", ".", "file_path", "\n", "repo_path_str", "=", "str", "(", "repo_path", ")", "+", "'/'", "\n", "repo_path", ".", "parent", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "repo", "=", "Repo", ".", "clone_from", "(", "input", ".", "file_name", ",", "repo_path_str", ")", "\n", "branch", "=", "repo", ".", "head", ".", "reference", "\n", "gitignore_file", "=", "os", ".", "path", ".", "join", "(", "repo_path_str", ",", "'.gitignore'", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "gitignore_file", ")", ":", "\n", "            ", "os", ".", "remove", "(", "gitignore_file", ")", "\n", "with", "open", "(", "gitignore_file", ",", "'w'", ")", "as", "fp", ":", "\n", "            ", "pass", "\n", "loader", "=", "GitLoader", "(", "repo_path", "=", "repo_path_str", ",", "branch", "=", "branch", ")", "\n", "elif", "input", ".", "file_extension", "==", "'json'", ":", "\n", "        ", "pass", "\n", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Unsupported file extension: {input.file_extension}'", ")", "\n", "documents", "=", "loader", ".", "load", "(", ")", "\n", "input", ".", "documents", "=", "documents", "\n", "if", "not", "self", ".", "redis", ".", "exists_with_key_type", "(", "input", ".", "user_properties", ",", "RedisKeyType", ".", "DOCUMENTS", ")", ":", "\n", "        ", "logger", ".", "debug", "(", "f'Creating new knowledge base for {input.user_properties.user_id}:{input.user_properties.session_id} in Redis.'", ")", "\n", "self", ".", "redis", ".", "safe_set_with_key_type", "(", "input", ".", "user_properties", ",", "RedisKeyType", ".", "DOCUMENTS", ",", "[", "]", ")", "\n", "new_documents", "=", "self", ".", "redis", ".", "safe_get_with_key_type", "(", "input", ".", "user_properties", ",", "RedisKeyType", ".", "DOCUMENTS", ")", "\n", "new_documents", ".", "append", "(", "input", ".", "json", "(", ")", ")", "\n", "self", ".", "redis", ".", "safe_set_with_key_type", "(", "input", ".", "user_properties", ",", "RedisKeyType", ".", "DOCUMENTS", ",", "new_documents", ")", "\n", "return", "input", ".", "json", "(", ")"], "docstring_tokens": ["Process", "the", "file", "to", "compute", "the", "documents", "\n", "\n", "Args", ":", "\n", "    ", "input", "(", "Document", ")", ":", "The", "document", "to", "process", "\n", "save_redis", "(", "bool", ",", "optional", ")", ":", "Whether", "to", "save", "the", "document", "to", "Redis", ".", "Defaults", "to", "True", "."]}
{"retrieval_idx": 37, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "ChatInput", ")", ":", "\n", "    ", "return", "self", ".", "_make_completion", "(", "[", "Message", "(", "role", "=", "'user'", ",", "content", "=", "input", ".", "message_text", ")", "]", ",", "input", ")"], "docstring_tokens": ["Chat", "with", "OpenAI", "'", "s", "model", "with", "simple", "text", "."]}
{"retrieval_idx": 46, "function_tokens": ["def", "Func", "(", "arg0", ",", "arg1", ":", "str", ")", "->", "bool", ":", "\n", "    ", "return", "self", ".", "redis", ".", "exists", "(", "key", ")"], "docstring_tokens": ["Check", "if", "a", "key", "exists", "in", "Redis", ".", "\n", "\n", "Args", ":", "\n", "    ", "key", "(", "str", ")", ":", "The", "key", "to", "check", "for", "existence", ".", "\n", "\n", "Returns", ":", "\n", "    ", "bool", ":", "True", "if", "the", "key", "exists", ",", "False", "otherwise", "."]}
